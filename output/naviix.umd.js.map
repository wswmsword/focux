{"version":3,"file":"naviix.umd.js","sources":["../index.js"],"sourcesContent":["\nexport default function naviix(squares) {\n  const formattedSquares = formatIpt(squares);\n\n  const { x: rawX, firstInWrap } = getX(formattedSquares);\n  const x = genUserX(rawX, firstInWrap);\n  return x;\n}\n\nfunction getX(squares, notRoot) {\n  let mergedX = new Map();\n  let firstInWrap = new Map();\n\n  if (!notRoot && squares.length > 1) { // 位于 root，且区域数量大于 1\n    const wraps = squares.map(info => info.wrap);\n    squares.forEach(s => {\n      firstInWrap.set(s.wrap.id, s.locs[0]);\n    });\n    const { x } = getXBySimple(wraps);\n    mergedX = x;\n  }\n\n  squares.forEach(({ locs, subs, wrap }) => {\n    const subWraps = (subs || []).map(s => s.wrap);\n    (subs || []).map(s => {\n      firstInWrap.set(s.wrap.id, s.locs[0]);\n    });\n    const newLocs = locs.concat(subWraps);\n    const { x } = getXBySimple(newLocs, wrap, subWraps);\n    const { x: subsX, firstInWrap: _firstInWrap } = getX(subs || [], true);\n    mergedX = new Map(Array.from(mergedX).concat(Array.from(x)).concat(Array.from(subsX)));\n    firstInWrap = new Map(Array.from(firstInWrap).concat(Array.from(_firstInWrap)));\n  });\n\n  return { x: mergedX, firstInWrap };\n}\n\nfunction getXBySimple(squares, wrap, subWraps) {\n  const sortedX = [...squares];\n  sortedX.sort((s1, s2) => s1.loc[0] - s2.loc[0]);\n  const sortedY = [...squares];\n  sortedY.sort((s1, s2) => s1.loc[1] - s2.loc[1]);\n  const dirMap = new Map();\n  let t = -Infinity;\n  let b = Infinity;\n  let l = Infinity;\n  let r = -Infinity;\n\n  squares.forEach(s => {\n    const [x, y, t1, t2] = s.loc;\n    const sOrderY = sortedY.findIndex(e => e.id === s.id);\n    const sOrderX = sortedX.findIndex(e => e.id === s.id);\n\n    // next down element\n    let minDownDis = Infinity;\n    let downS = wrap; // 默认指向包裹层\n    let gotDown = false;\n    sortedY.slice(0, sOrderY).forEach(s2 => {\n      let dis = getMinDownDis(s.loc, s2.loc);\n\n      if (dis < minDownDis) {\n        gotDown = true;\n        downS = s2;\n        minDownDis = dis;\n      }\n    });\n\n    // next up element\n    let minUpDis = Infinity;\n    let upS = wrap;\n    let gotUp = false;\n    sortedY.slice(sOrderY + 1).forEach(s2 => {\n      let dis = getMinUpDis(s.loc, s2.loc);\n\n      if (dis < minUpDis) {\n        gotUp = true;\n        upS = s2;\n        minUpDis = dis;\n      }\n    });\n\n    // next left element\n    let minLDis = Infinity;\n    let lS = wrap;\n    let gotLeft = false;\n    sortedX.slice(0, sOrderX).forEach(s2 => {\n      let dis = getMinLeftDis(s.loc, s2.loc);\n\n      if (dis < minLDis) {\n        gotLeft = true;\n        lS = s2;\n        minLDis = dis;\n      }\n    });\n\n    // next right element\n    let minRDis = Infinity;\n    let rS = wrap;\n    let gotRight = false;\n    sortedX.slice(sOrderX + 1).forEach(s2 => {\n      const dis = getMinRightDis(s.loc, s2.loc);\n\n      if (dis < minRDis) {\n        gotRight = true;\n        rS = s2;\n        minRDis = dis;\n      }\n    });\n\n    dirMap.set(s.id, {\n      up: upS,\n      down: downS,\n      left: lS,\n      right: rS,\n      nextWrap: { // 指向元素是否为包裹层\n        up: !gotUp,\n        down: !gotDown,\n        right: !gotRight,\n        left: !gotLeft,\n      },\n      nextSubWrap: { // 是否内部的包裹层\n        up: subWraps.includes(upS),\n        down: subWraps.includes(downS),\n        right: subWraps.includes(rS),\n        left: subWraps.includes(lS),\n      },\n    });\n\n    // 更新边界\n    t = y + t2 > t ? y + t2 : t;\n    b = y - t2 < b ? y - t2 : b;\n    l = x - t2 < l ? x - t1 : l;\n    r = x + t2 > r ? x + t1 : r;\n  });\n\n  return { x: dirMap, t, b, l, r };\n}\n\nfunction getMinDownDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (y > y2) { // is below\n\n    if (x2 - t1a > x + t1) { // is right corner\n\n      if (x2 - t1a - x - t1 < y - t2 - y2 - t2a) {\n\n        dis = getDistance(x + t1, y - t2, x2 - t1a, y2 + t2a);\n      }\n    } else if (x2 + t1a < x - t1) { // is left corner\n\n      if (x - t1 - x2 - t1a < y - t2 - y2 - t2a) {\n        dis = getDistance(x + t1, y - t2, x2 + t1a, y2 + t2a);\n      }\n    } else { // is project\n      dis = Math.pow(y - t2 - y2 - t2a, 2);\n      if (y2 + t2a > y - t2) dis = -dis;\n    }\n  }\n\n  return dis;\n}\n\nfunction getMinUpDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (y < y2) { // is above\n    if (x2 - t1a > x + t1) { // is right corner\n      if (x2 - t1a - x - t1 < y2 - t2a - y - t2) {\n        dis = getDistance(x + t1, y + t2, x2 - t1a, y2 - t2a);\n      }\n    } else if (x2 + t1a < x - t1) { // is left corner\n      if (x - t1 - x2 - t1a < y2 - t2a - y - t2) {\n        dis = getDistance(x - t1, y + t2, x2 + t1a, y2 - t2a);\n      }\n    } else { // is project\n      dis = Math.pow(y2 - t2a - y - t2, 2);\n      if (y2 - t2a < y + t2) dis = -dis;\n    }\n  }\n  return dis;\n}\n\nfunction getMinLeftDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (x > x2) { // is left\n    if (y2 - t2a > y + t2) { // is top corner\n      if (y2 - t2a - y - t2 < x - t1 - x2 - t1a) { // closer x\n        dis = getDistance(x - t1, y + t2, x2 + t1a, y2 - t2a);\n      }\n    } else if (y2 + t2a < y - t2) { // is bottom corder\n      if (y - t2 - y2 - t2a < x - t1 - x2 - t1a) { // closer x\n        dis = getDistance(x - t1, y - t2, x2 + t1a, y2 + t2a);\n      }\n    } else { // is project\n      dis = Math.pow(x - t1 - x2 - t1a, 2);\n      if (x2 + t1a > x - t1) dis = -dis;\n    }\n  }\n  return dis;\n}\n\nfunction getMinRightDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (x2 > x) { // is right\n    if (y2 - t2a > y + t2) { // is top corner\n      if (y2 - t2a - y - t2 < x2 - t1a - x - t1) { // closer x\n        dis = getDistance(x + t1, y + t2, x2 - t1a, y2 - t2a);\n      }\n    } else if (y2 + t2a < y - t2) { // is bottom corder\n      if (y - t2 - y2 - t2a < x2 - t1a - x - t1) {\n        dis = getDistance(x + t1, y - t2, x2 - t1a, y2 + t2a);\n      }\n    } else {\n      dis = Math.pow(x2 - t1a - x - t1, 2);\n      if (x2 - t1a < x + t1) // overlap\n        dis = -dis;\n    }\n  }\n\n  return dis;\n}\n\nfunction getDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy; // without sqrt\n}\n\nfunction formatIpt(input) {\n\n  if (input == null) return;\n\n  const aryIpt = Array.isArray(input);\n  const simpleIpt = aryIpt &&\n    (Array.isArray(input[0]) ?\n      typeof input[0][0] === \"number\" :\n      input[0].loc != null);\n  const objIpt = !aryIpt;\n  const normalIpt = !simpleIpt && !objIpt;\n\n  let formatted = null;\n\n  if (simpleIpt) {\n    formatted = [{ locs: input.map((s) => Array.isArray(s) ? { id: s, loc: s } : s) }];\n  } else if (objIpt) {\n    const { wrap, subs, locs } = input;\n    formatted = [{ locs: formatIpt(locs)[0].locs }];\n    if (subs != null) {\n      Object.assign(formatted[0], {\n        subs: formatIpt(input.subs),\n      });\n    }\n    if (wrap != null) {\n      Object.assign(formatted[0], {\n        wrap: Array.isArray(wrap) ? { loc: wrap, id: wrap } : wrap\n      });\n    }\n  } else if (normalIpt) {\n    formatted = input.map((item) => {\n      const { locs, wrap, subs } = item;\n      const res = {\n        locs: formatIpt(locs)[0].locs,\n        wrap: Array.isArray(wrap) ? { loc: wrap, id: wrap } : wrap,\n      };\n      if (subs) {\n        Object.assign(res, {\n          subs: formatIpt(subs),\n        });\n      }\n      return res;\n    });\n  }\n  return formatted;\n}\n\nfunction genUserX(rawX, firstInWrap) {\n  const x = new Map();\n  rawX.forEach((val, key) => {\n    const { up, right, down, left, nextWrap, nextSubWrap } = val;\n    const { up: upWrap, right: rWrap, down: downWrap, left: lWrap } = nextWrap;\n    const { up: upSubW, right: rSubW, down: dSubWrap, left: lSubW } = nextSubWrap;\n\n    const userUp = genUserDir(\"up\", up, upWrap, upSubW);\n    const userRight = genUserDir(\"right\", right, rWrap, rSubW);\n    const userDown = genUserDir(\"down\", down, downWrap, dSubWrap);\n    const userLeft = genUserDir(\"left\", left, lWrap, lSubW);\n\n    x.set(key, {\n      up: userUp,\n      right: userRight,\n      down: userDown,\n      left: userLeft,\n    });\n  });\n\n  return x;\n\n  function genUserDir(dirStr, rawDir, wrap, subW) {\n    let userDir = rawDir;\n    if (rawDir && wrap) { // 是否指向包裹层\n      const wrapTarget = rawX.get(rawDir.id);\n      const { nextSubWrap } = wrapTarget;\n      userDir = wrapTarget[dirStr];\n      if (nextSubWrap[dirStr]) {\n        userDir = firstInWrap.get(wrapTarget[dirStr].id);\n      }\n    } else if (subW) { // 是否指向子包裹层\n      userDir = firstInWrap.get(rawDir.id);\n    }\n\n    return userDir;\n  }\n}"],"names":["naviix","squares","formattedSquares","formatIpt","_getX","getX","rawX","x","firstInWrap","genUserX","notRoot","mergedX","Map","length","wraps","map","info","wrap","forEach","s","set","id","locs","_getXBySimple","getXBySimple","_ref","subs","subWraps","newLocs","concat","_getXBySimple2","_getX2","subsX","_firstInWrap","Array","from","sortedX","sort","s1","s2","loc","sortedY","dirMap","t","Infinity","b","l","r","_s$loc","y","t1","t2","sOrderY","findIndex","e","sOrderX","minDownDis","downS","gotDown","slice","dis","getMinDownDis","minUpDis","upS","gotUp","getMinUpDis","minLDis","lS","gotLeft","getMinLeftDis","minRDis","rS","gotRight","getMinRightDis","up","down","left","right","nextWrap","nextSubWrap","includes","x2","y2","t1a","t2a","getDistance","Math","pow","x1","y1","dx","dy","input","aryIpt","isArray","simpleIpt","objIpt","normalIpt","formatted","Object","assign","item","res","val","key","upWrap","rWrap","downWrap","lWrap","upSubW","rSubW","dSubWrap","lSubW","userUp","genUserDir","userRight","userDown","userLeft","dirStr","rawDir","subW","userDir","wrapTarget","get"],"mappings":"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"}