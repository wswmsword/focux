{"version":3,"file":"naviix.umd.min.js","sources":["../index.js"],"sourcesContent":["\nexport default function naviix(squares) {\n  const formattedSquares = formatIpt(squares);\n\n  const { x: rawX, firstInWrap } = getX(formattedSquares);\n  const x = genUserX(rawX, firstInWrap);\n  return x;\n}\n\nfunction getX(squares, notRoot) {\n  let mergedX = new Map();\n  let firstInWrap = new Map();\n\n  if (!notRoot && squares.length > 1) { // 位于 root，且区域数量大于 1\n    const wraps = squares.map(info => info.wrap);\n    squares.forEach(s => {\n      firstInWrap.set(s.wrap.id, s.locs[0]);\n    });\n    const { x } = getXBySimple(wraps);\n    mergedX = x;\n  }\n\n  squares.forEach(({ locs, subs, wrap }) => {\n    const subWraps = (subs || []).map(s => s.wrap);\n    (subs || []).map(s => {\n      firstInWrap.set(s.wrap.id, s.locs[0]);\n    });\n    const newLocs = locs.concat(subWraps);\n    const { x } = getXBySimple(newLocs, wrap, subWraps);\n    const { x: subsX, firstInWrap: _firstInWrap } = getX(subs || [], true);\n    mergedX = new Map(Array.from(mergedX).concat(Array.from(x)).concat(Array.from(subsX)));\n    firstInWrap = new Map(Array.from(firstInWrap).concat(Array.from(_firstInWrap)));\n  });\n\n  return { x: mergedX, firstInWrap };\n}\n\nfunction getXBySimple(squares, wrap, subWraps) {\n  const sortedX = [...squares];\n  sortedX.sort((s1, s2) => s1.loc[0] - s2.loc[0]);\n  const sortedY = [...squares];\n  sortedY.sort((s1, s2) => s1.loc[1] - s2.loc[1]);\n  const dirMap = new Map();\n  let t = -Infinity;\n  let b = Infinity;\n  let l = Infinity;\n  let r = -Infinity;\n\n  squares.forEach(s => {\n    const [x, y, t1, t2] = s.loc;\n    const sOrderY = sortedY.findIndex(e => e.id === s.id);\n    const sOrderX = sortedX.findIndex(e => e.id === s.id);\n\n    // next down element\n    let minDownDis = Infinity;\n    let downS = wrap; // 默认指向包裹层\n    let gotDown = false;\n    sortedY.slice(0, sOrderY).forEach(s2 => {\n      let dis = getMinDownDis(s.loc, s2.loc);\n\n      if (dis < minDownDis) {\n        gotDown = true;\n        downS = s2;\n        minDownDis = dis;\n      }\n    });\n\n    // next up element\n    let minUpDis = Infinity;\n    let upS = wrap;\n    let gotUp = false;\n    sortedY.slice(sOrderY + 1).forEach(s2 => {\n      let dis = getMinUpDis(s.loc, s2.loc);\n\n      if (dis < minUpDis) {\n        gotUp = true;\n        upS = s2;\n        minUpDis = dis;\n      }\n    });\n\n    // next left element\n    let minLDis = Infinity;\n    let lS = wrap;\n    let gotLeft = false;\n    sortedX.slice(0, sOrderX).forEach(s2 => {\n      let dis = getMinLeftDis(s.loc, s2.loc);\n\n      if (dis < minLDis) {\n        gotLeft = true;\n        lS = s2;\n        minLDis = dis;\n      }\n    });\n\n    // next right element\n    let minRDis = Infinity;\n    let rS = wrap;\n    let gotRight = false;\n    sortedX.slice(sOrderX + 1).forEach(s2 => {\n      const dis = getMinRightDis(s.loc, s2.loc);\n\n      if (dis < minRDis) {\n        gotRight = true;\n        rS = s2;\n        minRDis = dis;\n      }\n    });\n\n    dirMap.set(s.id, {\n      up: upS,\n      down: downS,\n      left: lS,\n      right: rS,\n      nextWrap: { // 指向元素是否为包裹层\n        up: !gotUp,\n        down: !gotDown,\n        right: !gotRight,\n        left: !gotLeft,\n      },\n      nextSubWrap: { // 是否内部的包裹层\n        up: subWraps.includes(upS),\n        down: subWraps.includes(downS),\n        right: subWraps.includes(rS),\n        left: subWraps.includes(lS),\n      },\n    });\n\n    // 更新边界\n    t = y + t2 > t ? y + t2 : t;\n    b = y - t2 < b ? y - t2 : b;\n    l = x - t2 < l ? x - t1 : l;\n    r = x + t2 > r ? x + t1 : r;\n  });\n\n  return { x: dirMap, t, b, l, r };\n}\n\nfunction getMinDownDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (y > y2) { // is below\n\n    if (x2 - t1a > x + t1) { // is right corner\n\n      if (x2 - t1a - x - t1 < y - t2 - y2 - t2a) {\n\n        dis = getDistance(x + t1, y - t2, x2 - t1a, y2 + t2a);\n      }\n    } else if (x2 + t1a < x - t1) { // is left corner\n\n      if (x - t1 - x2 - t1a < y - t2 - y2 - t2a) {\n        dis = getDistance(x + t1, y - t2, x2 + t1a, y2 + t2a);\n      }\n    } else { // is project\n      dis = Math.pow(y - t2 - y2 - t2a, 2);\n      if (y2 + t2a > y - t2) dis = -dis;\n    }\n  }\n\n  return dis;\n}\n\nfunction getMinUpDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (y < y2) { // is above\n    if (x2 - t1a > x + t1) { // is right corner\n      if (x2 - t1a - x - t1 < y2 - t2a - y - t2) {\n        dis = getDistance(x + t1, y + t2, x2 - t1a, y2 - t2a);\n      }\n    } else if (x2 + t1a < x - t1) { // is left corner\n      if (x - t1 - x2 - t1a < y2 - t2a - y - t2) {\n        dis = getDistance(x - t1, y + t2, x2 + t1a, y2 - t2a);\n      }\n    } else { // is project\n      dis = Math.pow(y2 - t2a - y - t2, 2);\n      if (y2 - t2a < y + t2) dis = -dis;\n    }\n  }\n  return dis;\n}\n\nfunction getMinLeftDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (x > x2) { // is left\n    if (y2 - t2a > y + t2) { // is top corner\n      if (y2 - t2a - y - t2 < x - t1 - x2 - t1a) { // closer x\n        dis = getDistance(x - t1, y + t2, x2 + t1a, y2 - t2a);\n      }\n    } else if (y2 + t2a < y - t2) { // is bottom corder\n      if (y - t2 - y2 - t2a < x - t1 - x2 - t1a) { // closer x\n        dis = getDistance(x - t1, y - t2, x2 + t1a, y2 + t2a);\n      }\n    } else { // is project\n      dis = Math.pow(x - t1 - x2 - t1a, 2);\n      if (x2 + t1a > x - t1) dis = -dis;\n    }\n  }\n  return dis;\n}\n\nfunction getMinRightDis(s, s2) {\n  const [x, y, t1, t2] = s;\n  const [x2, y2, t1a, t2a] = s2;\n  let dis = Infinity;\n  if (x2 > x) { // is right\n    if (y2 - t2a > y + t2) { // is top corner\n      if (y2 - t2a - y - t2 < x2 - t1a - x - t1) { // closer x\n        dis = getDistance(x + t1, y + t2, x2 - t1a, y2 - t2a);\n      }\n    } else if (y2 + t2a < y - t2) { // is bottom corder\n      if (y - t2 - y2 - t2a < x2 - t1a - x - t1) {\n        dis = getDistance(x + t1, y - t2, x2 - t1a, y2 + t2a);\n      }\n    } else {\n      dis = Math.pow(x2 - t1a - x - t1, 2);\n      if (x2 - t1a < x + t1) // overlap\n        dis = -dis;\n    }\n  }\n\n  return dis;\n}\n\nfunction getDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy; // without sqrt\n}\n\nfunction formatIpt(input) {\n\n  if (input == null) return;\n\n  const aryIpt = Array.isArray(input);\n  const simpleIpt = aryIpt &&\n    (Array.isArray(input[0]) ?\n      typeof input[0][0] === \"number\" :\n      input[0].loc != null);\n  const objIpt = !aryIpt;\n  const normalIpt = !simpleIpt && !objIpt;\n\n  let formatted = null;\n\n  if (simpleIpt) {\n    formatted = [{ locs: input.map((s) => Array.isArray(s) ? { id: s, loc: s } : s) }];\n  } else if (objIpt) {\n    const { wrap, subs, locs } = input;\n    formatted = [{ locs: formatIpt(locs)[0].locs }];\n    if (subs != null) {\n      Object.assign(formatted[0], {\n        subs: formatIpt(input.subs),\n      });\n    }\n    if (wrap != null) {\n      Object.assign(formatted[0], {\n        wrap: Array.isArray(wrap) ? { loc: wrap, id: wrap } : wrap\n      });\n    }\n  } else if (normalIpt) {\n    formatted = input.map((item) => {\n      const { locs, wrap, subs } = item;\n      const res = {\n        locs: formatIpt(locs)[0].locs,\n        wrap: Array.isArray(wrap) ? { loc: wrap, id: wrap } : wrap,\n      };\n      if (subs) {\n        Object.assign(res, {\n          subs: formatIpt(subs),\n        });\n      }\n      return res;\n    });\n  }\n  return formatted;\n}\n\nfunction genUserX(rawX, firstInWrap) {\n  const x = new Map();\n  rawX.forEach((val, key) => {\n    const { up, right, down, left, nextWrap, nextSubWrap } = val;\n    const { up: upWrap, right: rWrap, down: downWrap, left: lWrap } = nextWrap;\n    const { up: upSubW, right: rSubW, down: dSubWrap, left: lSubW } = nextSubWrap;\n\n    const userUp = genUserDir(\"up\", up, upWrap, upSubW);\n    const userRight = genUserDir(\"right\", right, rWrap, rSubW);\n    const userDown = genUserDir(\"down\", down, downWrap, dSubWrap);\n    const userLeft = genUserDir(\"left\", left, lWrap, lSubW);\n\n    x.set(key, {\n      up: userUp,\n      right: userRight,\n      down: userDown,\n      left: userLeft,\n    });\n  });\n\n  return x;\n\n  function genUserDir(dirStr, rawDir, wrap, subW) {\n    let userDir = rawDir;\n    if (rawDir && wrap) { // 是否指向包裹层\n      const wrapTarget = rawX.get(rawDir.id);\n      const { nextSubWrap } = wrapTarget;\n      userDir = wrapTarget[dirStr];\n      if (nextSubWrap[dirStr]) {\n        userDir = firstInWrap.get(wrapTarget[dirStr].id);\n      }\n    } else if (subW) { // 是否指向子包裹层\n      userDir = firstInWrap.get(rawDir.id);\n    }\n\n    return userDir;\n  }\n}"],"names":["getX","squares","notRoot","mergedX","Map","firstInWrap","length","wraps","map","info","wrap","forEach","s","set","id","locs","x","getXBySimple","_ref","subs","subWraps","concat","_getX2","subsX","_firstInWrap","Array","from","sortedX","sort","s1","s2","loc","sortedY","dirMap","t","Infinity","b","l","r","_s$loc","y","t1","t2","sOrderY","findIndex","e","sOrderX","minDownDis","downS","gotDown","slice","dis","x2","y2","t1a","t2a","getDistance","Math","pow","getMinDownDis","minUpDis","upS","gotUp","getMinUpDis","minLDis","lS","gotLeft","getMinLeftDis","minRDis","rS","gotRight","getMinRightDis","up","down","left","right","nextWrap","nextSubWrap","includes","x1","y1","dx","dy","formatIpt","input","aryIpt","isArray","simpleIpt","objIpt","normalIpt","formatted","Object","assign","item","res","_getX","rawX","val","key","upWrap","rWrap","downWrap","lWrap","upSubW","rSubW","dSubWrap","lSubW","userUp","genUserDir","userRight","userDown","userLeft","dirStr","rawDir","subW","userDir","wrapTarget","get","genUserX"],"mappings":"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"}